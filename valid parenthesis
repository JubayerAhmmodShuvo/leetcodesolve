   /* if(s.size() == 1)
        return false;
    
    stack<char> stack;
    
    int i=0;
    while(i < s.size()){
        if(s[i] == '(' || 
           s[i] == '{' ||
           s[i] == '['   ){
            
            stack.push(s[i]);
            i++;
        }
        else {
            
            if(s[i] == ')'){
                
                if(!stack.empty() && stack.top() == '('){
                    stack.pop();
                    i++;}
                
                else return false;
                
            }
            if(s[i] == ']'){
                
                if(!stack.empty() && stack.top() == '[' ){
                    stack.pop();
                    i++;}
                
                else return false;
                
            }  
            if(s[i] == '}'){
                
                if(!stack.empty() && stack.top() == '{'){
                    stack.pop();
                    i++;}
                
                else return false;
            }
        }
    }
    if(stack.empty())
        return true;
    else return false;
}
}; */

class Solution {
public:
    bool isValid(string s) {
        stack <char> st;
        int len = s.length();
        for (int i=0; i<len; i++){
            if(s[i]=='(' || s[i]=='{' || s[i]=='[' )
                st.push(s[i]);
            else if (s[i]==')' || s[i]=='}' || s[i]==']' ){
                if(st.empty())
                    return false;
                else if( s[i]== ')' && st.top()!= '(' )
                    return false;
                else if( s[i]== '}' && st.top()!= '{' )
                    return false;
                else if( s[i]== ']' && st.top()!= '[' )
                    return false;
                else
                    st.pop();
                
            }
        }
        
        if(st.empty())
                    return true;
        else 
            return false;
        
    }
};